<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CI/CD Hub on Lifecycle Manager Learning Center</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/</link><description>Recent content in CI/CD Hub on Lifecycle Manager Learning Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/cicd-hub-start/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/cicd-hub-start/</guid><description>This section details how to install the CI/CD Hub using Helm on an existing Kubernetes cluster. This will install the following services:
Gogs: Lightweight self-hosted Git service Nexus: Artifact repository manager Jenkins: Automation server to enable continuous integration and continuous delivery Openldap: Open-source implementation of the Lightweight Directory Access Protocol, for user management of Agile Lifecycle Manager (ALM) environments Docker Registry: Registry for hosting docker images Nginx Ingress: Ingress controller to support accessing some services with Ingress Pre-requisites Kubernetes A Kubernetes cluster is required to install the Hub.</description></item><item><title>Offline</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/offline/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/offline/</guid><description>The following guide explains how to pre-prepare the artifacts required by the CI/CD Hub during installation so you may complete installation at a later date without internet access.
Preparing Offline Install Helm Charts Pre-download the CI/CD Hub Helm chart from the releases page on GitHub.
Docker Images Create a workspace mkdir cicdhub-docker-images
Identify requires images Below is a full list of the docker images used by the sub-charts in v2.0.5 of the CI/CD Hub helm chart:</description></item><item><title>Sizing</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/sizing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/sizing/</guid><description>CPU and Memory The CPU and memory limits of each service may be configured by adding resource requests and limit values to the custom values file. See Kubernetes - Manage Compute Resources Container for more information.
The default values for each service are shown below. Override any defaults by adding them to your custom values. Blank fields represent deployments without a default value, which will result in no limits being imposed on their usage.</description></item><item><title>Storage</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/storage/</guid><description>Storage Class By default, any service requiring persistence is configured to use the default provisioner of your Kubernetes cluster. You can check your default with kubectl:
kubectl get storageclass
The default storage class will be shown with (default) alongside it&amp;rsquo;s name. If you have no default, you can mark an existing class as the default with:
kubectl patch storageclass &amp;lt;your-class-name&amp;gt; -p '{&amp;quot;metadata&amp;quot;: {&amp;quot;annotations&amp;quot;:{&amp;quot;storageclass.kubernetes.io/is-default-class&amp;quot;:&amp;quot;true&amp;quot;}}}'
Alternatively, you may explicitly set the storage class for each service by adding storageClass fields in your custom values:</description></item><item><title>Access Configuration</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/access-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/access-config/</guid><description>Hostnames and Ports By default, the CI/CD Hub services are configured for access as described below:
Service Type Address nexus NodePort &amp;lt;your-cicdhub-host&amp;gt;:32739 gogs NodePort &amp;amp; Ingress &amp;lt;your-cicdhub-host&amp;gt;:32734 OR git.cicdhub:&amp;lt;nginx-ingress-port&amp;gt; jenkins NodePort &amp;amp; Ingress &amp;lt;your-cicdhub-host&amp;gt;:32732 OR jenkins.cicdhub:&amp;lt;nginx-ingress-port&amp;gt; openldap NodePort &amp;lt;your-cicdhub-host&amp;gt;:32737, SSL: https://&amp;lt;your-cicdhub-host&amp;gt;:32738 docker registry NodePort &amp;lt;your-cicdhub-host&amp;gt;:32736 nginx-ingress NodePort &amp;lt;your-cicdhub-host&amp;gt;:32080, SSL: https://&amp;lt;your-cicdhub-host&amp;gt;:32443 All ports and Ingress hosts listed above are configurable through the Helm chart.</description></item><item><title>Security</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/security/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/security/</guid><description>Access Credentials Many of the CI/CD Hub services have default usernames and passwords that may only be changed after installation. However, a few allow a value to be provided through the custom values.
The default values for each service are shown below. Override any defaults by adding them to your custom values.
global:
## Note that the Openldap password is set through a global variable
ldap:
managerPassword: admin
domain: lm.com
gogs:
postgresql:
postgresUser: admin
postgresPassword: admin
jenkins:
master:
adminUser: admin
adminPassword: admin
Default credentials for any service not shown here will be detailed later in the installation.</description></item><item><title>Install</title><link>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/install-cicdhub/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pages.github.ibm.com/TNC/alm-docs.github.io/installation/cicdhub/install-cicdhub/</guid><description>This section assumes you have followed the configuration steps and now have:
a CI/CD Hub Helm chart a custom values YAML file Installing with Helm Install CI/CD Hub with the helm install command:
Standard:
helm install &amp;lt;cicdhub-helm-chart&amp;gt; --name &amp;lt;your-release-name&amp;gt; --namespace &amp;lt;your-namespace&amp;gt; -f &amp;lt;your-custom-values-file&amp;gt;
ICP:
helm install &amp;lt;cicdhub-helm-chart&amp;gt; --name &amp;lt;your-release-name&amp;gt; --namespace &amp;lt;your-namespace&amp;gt; -f &amp;lt;your-custom-values-file&amp;gt; --tls
cicdhub-helm-chart - path to the CI/CD Hub Helm chart your-release-name - unique name used to identify this installation in Helm your-namespace - Kubernetes namespace to install into (leave out to use default) your-custom-values-file - path to the YAML file created with any configuration overrides (if you have any) For example:</description></item></channel></rss>