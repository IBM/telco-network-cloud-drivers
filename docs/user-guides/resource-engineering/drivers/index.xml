<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drivers on Telco Network Cloud Orchestration Learning Center</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/</link><description>Recent content in Drivers on Telco Network Cloud Orchestration Learning Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/overview/</guid><description>Resource Driver Overview Brent handles Resource Manager transition and operation requests for Resources using Resource Drivers.
The following diagram shows the interactions between Brent and a resource driver Resource Driver is a combination of VIM and Lifecycle drivers of TNC-O version 2.1 into a single driver concept.
Unlike in v2.1.0 where a VIM Driver handles infrastructure creation/deletion while Lifecycle Driver executes resource transitions once the resource has been created; a Resource Manager handles both infrastructure and lifecycles by serving Create/Delete as lifecycle requests.</description></item><item><title>Onboarding</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/onboarding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/onboarding/</guid><description>Onboard Drivers You can onboard drivers with the resourcedriver add command from LMCTL v2.1+. Read more about all the commands from LMCTL resourcedriver command reference
Drivers by default run with SSL enabled and need to be onboarded with an SSL certificate that allows Brent to communicate with them. To retrieve the SSL certificate for a deployed driver (in base64-encoded PEM format), run the following command:
kubectl get secret &amp;lt;secretName&amp;gt; -o 'go-template={{index .</description></item><item><title>Creating Resource Drivers</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/creating-drivers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/drivers/creating-drivers/</guid><description>Introduction You may create your own resource driver to support integration with virtual infrastructure and to complete transitions and operations with different scripting mechanisms. The driver must fulfill resource driver APIs and be capable of accepting HTTP requests and returning responses asynchronously on Kafka.
The programming language used to create the driver is at the discretion of the user. The SOL 003 Lifecycle Driver is a good example of writing a driver with Java.</description></item></channel></rss>