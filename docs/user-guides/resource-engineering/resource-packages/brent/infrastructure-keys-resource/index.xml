<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Infrastructure Keys Example on Telco Network Cloud Orchestration Learning Center</title><link>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/</link><description>Recent content in Infrastructure Keys Example on Telco Network Cloud Orchestration Learning Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/index.xml" rel="self" type="application/rss+xml"/><item><title>Prerequisites</title><link>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/get-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/get-started/</guid><description>Objectives This guide aims to show you how to:
Create a working Resource with Openstack infrastructure Include an external IP address as part of the infrastructure so the Resource service can be accessed publicly Create Compute instances accessible with SSH keys that are stored securely in LM (Brent), and provided to lifecycle scripts and inventory to be able to connect to the instance. Add lifecycle scripts to configure a software function for the Resource Create an instance of the Resource Prerequisites To follow this guide you will need:</description></item><item><title>Create Resource</title><link>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/creating-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/creating-resource/</guid><description>Create the Resource Project The resource comprises 2 Apache servers defined in a HEAT template (one that uses an existing SSH key pair pre-created in Openstack, the other uses a new SSH key pair created by the HEAT template) and configured by Ansible playbooks.
Start by creating a directory for the Resource project and navigating to it
mkdir hw-apache2 &amp;amp;&amp;amp; cd hw-apache2
Use LMCTL to create the basis of a Resource project</description></item><item><title>Add Shared Infrastructure Key to LM</title><link>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/creating-shared-infrastructure-key/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/creating-shared-infrastructure-key/</guid><description>Add the Shared Infrastructure Key to LM See infrastructure key management for a general introduction to infrastructure keys.
The resource descriptor defines a server1_ssh_key key property which is populated with the apache1_server_key shared infrastructure key by LM when the Resource driver that stands up the Openstack Apache instance is called. This (SSH) key is assumed to already exist in Openstack (see prerequisites), and also needs to be added (at least the private key portion) as a shared infrastructure key to LM to allow Resource drivers to communicate with the infrastructure in order to provision it.</description></item><item><title>Instantiate Resource</title><link>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/instantiate-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/instantiate-resource/</guid><description>Push Resource Push the Resource project to your target environment with LMCTL
lmctl project push example-env
Add Resource to design Create a new Assembly in the Agile Lifecycle Manager (ALM) UI
Open the Assembly design and click &amp;ldquo;Add Element&amp;rdquo; in the top right
Add an element using the hw-apache2 Resource descriptor now available in the environment
Select the &amp;ldquo;apache2-service&amp;rdquo; node in the designer and open the right hand panel by selecting the menu icon in the top right</description></item><item><title>Add Lifecycle</title><link>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/add-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guides/resource-engineering/resource-packages/brent/infrastructure-keys-resource/add-lifecycle/</guid><description>Create Lifecycle and Operation Scripts The next step is to create scripts for the the standardized lifecycles (start, stop, configure, install, integrity and uninstall) and operations defined in the resource descriptor.
The scripts may be implemented using any scripting language of choice, as long as there is a Resource Driver capable of executing them. Scripts are located in a subdirectory of the &amp;lsquo;Lifecycle&amp;rsquo; directory of the resource package, named after the type of the Resource driver that will use them.</description></item></channel></rss>