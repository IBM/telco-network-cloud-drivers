<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operations on Telco Network Cloud Orchestration Learning Center</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/</link><description>Recent content in Operations on Telco Network Cloud Orchestration Learning Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/index.xml" rel="self" type="application/rss+xml"/><item><title>Identifying Issues</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/identifying-issues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/identifying-issues/</guid><description>View Log Files While Telco Network Cloud Orchestration (TNCO) logs are generated on and can be viewed on individual pods (per service instances) using kubectl logs, in real terms this is impractical to do and gain a holistic view of system operation through the logs. Viewing logs from the collective logs in Elasticsearch using Kibana is both more effective and usable.
When viewing logs it is important to first ensure that the log level has the level of detail you require.</description></item><item><title>Infrastructure Key Management</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/infrastructure-key-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/infrastructure-key-management/</guid><description>Introduction An Infrastructure Key is a key comprising private and/or public keys (SSH keys) used when provisioning and communicating with infrastructure. Infrastructure keys are managed by LM (Brent), which provides REST APIs to manage them. The keys themselves are not exposed north-bound of Brent, only their names see resource descriptor key properties. Brent will dynamically substitute any key names in properties with the real key (public and private portions, if defined) before sending the key material over an SSH HTTP connection to Resource drivers.</description></item><item><title>Log Management</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/log-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/log-management/</guid><description>Logging and Log Management Telco Network Cloud Orchestration (TNCO) generates logs across all of its microservices. These logs are generated locally and shipped to Elasticsearch where they are persisted and can be retrieved/searched
Log tracing across TNCO can be a challenge if not done correctly:
There are ~9 discrete microservices Each is realized by N service instances Most services are stateless thus load/requests are evenly load balanced across these service instances.</description></item><item><title>Manage Instances</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/manage-instances/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/operations/manage-instances/</guid><description>This section describes the steps required to request an intent on a Network Service Instance, and then view the topology of the instance and the execution of the intent. A Network Service Instance is created from an already existing Network Service Design.
Objectives Learn how to request an intent on a Network Service Instance View the execution of the intent View the topology of the Network Service Instance Pre-requisites An existing Network Service Design Access to the UI of a running instance of Telco Network Cloud Orchestration (TNCO) Assembly Instances Recent Assembly Instances Once Network Services and VNFs are designed, they can be put into production.</description></item></channel></rss>