<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Configure LM on Telco Network Cloud Orchestration Learning Center</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/</link><description>Recent content in Configure LM on Telco Network Cloud Orchestration Learning Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/index.xml" rel="self" type="application/rss+xml"/><item><title>Accessing Vault</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/accessing-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/accessing-vault/</guid><description>The open source HashiCorp Vault is used to securely store configuration data for Agile Lifecycle Manager (ALM). It is exposed on an ingress port as host vault.lm
Vault has a GUI which can be used to alter the data held. This GUI is protected by a Vault Token with the token allocated to vault during the installation at which time the time-to-live for the token is also set. On expiry, this key will need to be changed or reset to its current value to maintain access to vault for both users and the set of ALM microservices.</description></item><item><title>Manage RM Timeout values</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/manage-rm-timeout-values/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/manage-rm-timeout-values/</guid><description>Introduction Agile Lifecycle Manager (ALM) can communicate with a number of Resource Managers (RM) when executing the set of tasks of an intent. This communication is through the OSSLM API. There are three timers and three associated timer configurations values which govern this relationship.
alm.http.clientReadTimeout alm.daytona.resource-manager.default-timeout-duration alm.daytona.resource-manager.polling-interval Setting Default Setting Description alm.http.clientReadTimeout 30s Defaulting to 30 seconds, clientReadTimeout represents the time that the Intent Engine will wait for a response to the task execution request from the RM alm.</description></item><item><title>Enable Error Links</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/error-links-running/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/error-links-running/</guid><description>Enabling the dashboard links for a running ALM Add the following to the nimrod secret in vault: &amp;quot;alm.nimrod.loggingDashboard.application&amp;quot;: &amp;quot;kibana&amp;quot;,
&amp;quot;alm.nimrod.loggingDashboard.enabled&amp;quot;: &amp;quot;true&amp;quot;,
&amp;quot;alm.nimrod.loggingDashboard.endpoint&amp;quot;: &amp;quot;http://kibana.lm:31001&amp;quot;,
&amp;quot;alm.nimrod.loggingDashboard.kibana.index&amp;quot;: &amp;quot;lm-logs&amp;quot;
Create an index in Kibana named lm-logs
Delete the Nimrod pod
kubectl delete pod &amp;lt;nimrod pod id&amp;gt;&amp;gt;</description></item><item><title>Managing Configuration</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/configuring-lm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/configuring-lm/</guid><description>Pre-requisites To follow this guide you will need:
an existing installation of the Agile Lifecycle Manager (ALM) Vault Many of the applications installed as part of the Lifecycle Manager load configuration from a configuration repository service. Vault is the chosen storage mechanism for any secure config required by the microservices. It is an industry standard approach to storing sensitive information and stores all secure config in a highly encrypted format.</description></item><item><title>Scale a Running ALM</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/upgrade-scaling-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/administration/configuration/upgrade-scaling-policy/</guid><description>The following guide explains how to upgrade a running Agile Lifecycle Manager (ALM) to scale with CPU usage.
Pre-requisites: The Kubernetes metrics server must be running in your Kubernetes environment for scaling of ALM to work. Configure ALM Existing installations of ALM can be scaled by adding an Horizontal Pod Autoscaler via kubectl.
For each service that you want to scale do the following:
Ensure that the service has resources set, you can do this by running: kubectl describe deployment &amp;lt;service name&amp;gt;
If the deployment has resources set then you will see the following:</description></item></channel></rss>