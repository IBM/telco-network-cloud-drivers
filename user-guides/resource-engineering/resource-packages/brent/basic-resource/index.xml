<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Basic Resource Example on Lifecycle Manager Learning Center</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/</link><description>Recent content in Basic Resource Example on Lifecycle Manager Learning Center</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/index.xml" rel="self" type="application/rss+xml"/><item><title>Prerequisites</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/get-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/get-started/</guid><description>Objectives This guide aims to show you how to:
Create a working Resource with Openstack infrastructure Include an external IP address as part of the infrastructure so the Resource service can be accessed publicly Add lifecycle scripts to configure a software function for the Resource Create an instance of the Resource Prerequisites To follow this guide you will need:
LMCTL v2.5.0+ A ready-to-use Agile Lifecycle Manager (ALM) environment An Openstack environment (for testing we recommend installing DevStack.</description></item><item><title>Create Resource</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/creating-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/creating-resource/</guid><description>Create the Resource Project Start by creating a directory for the Resource project and navigating to it
mkdir hw-apache2 &amp;amp;&amp;amp; cd hw-apache2
Use LMCTL to create the basis of a Resource project
lmctl project create --type Resource --rm brent
Each resource requires a resource descriptor in YAML format that is located in the &amp;lsquo;Definitions/lm/resource.yaml&amp;rsquo; file of the resource package. The format of this file is defined by the ALM Resource Descriptor YAML Specification.</description></item><item><title>Instantiate Resource</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/instantiate-resource/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/instantiate-resource/</guid><description>Push Resource Push the Resource project to your target environment with LMCTL
lmctl project push example-env
Add Resource to design Create a new Assembly in the Agile Lifecycle Manager (ALM) UI
Open the Assembly design and click &amp;ldquo;Add Element&amp;rdquo; in the top right
Add an element using the hw-apache2 Resource descriptor now available in the environment
Select the &amp;ldquo;apache2-service&amp;rdquo; node in the designer and open the right hand panel by selecting the menu icon in the top right</description></item><item><title>Add Lifecycle</title><link>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/add-lifecycle/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ibm.github.io/telco-network-cloud-drivers/user-guides/resource-engineering/resource-packages/brent/basic-resource/add-lifecycle/</guid><description>Create Lifecycle and Operation Scripts The next step is to create scripts for the the standardized lifecycles (start, stop, configure, install, integrity and uninstall) and operations defined in the resource descriptor.
The scripts may be implemented using any scripting language of choice, as long as there is a Resource Driver capable of executing them. Scripts are located in a subdirectory of the &amp;lsquo;Lifecycle&amp;rsquo; directory of the resource package, named after the type of the Resource driver that will use them.</description></item></channel></rss>